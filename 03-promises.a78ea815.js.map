{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAIlCC,GAHYF,SAASC,cAAc,gBACxBD,SAASC,cAAc,eACrBD,SAASC,cAAc,iBAC1B,MACVE,GAAW,EAEfJ,EAAOK,iBAAiB,UAaxB,SAAsBC,GACpBA,EAAEC,iBACF,IAEYC,EAARF,EAAEG,OADJC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAErBC,EAAaH,EAAMI,MACnBC,EAAYJ,EAAKG,MACjBE,EAAeJ,EAAOE,MAC5BG,YAAW,WACLd,IAGJA,GAAW,EAKf,SAAwBU,EAAYE,EAAWC,GAC7C,IAAIE,EAAY,EAEhBhB,EAAUiB,aAAY,YA/BxB,SAAuBC,EAAUV,GAC/B,OAAO,IAAIW,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEF,WAAUV,UAEpBa,EAAO,CAAEH,WAAUV,S,KA0BrBgB,CAAcR,EAAWL,GACtBc,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUV,EAAKkB,EAALlB,MACjBmB,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANtB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGR,EAAQQ,EAARR,SAAUV,EAAKkB,EAALlB,MAClBmB,EAAAhC,GAASiC,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANtB,EAAM,M,IAEvEQ,GAAwB,EACxBL,EAAasB,OAAOtB,GAAcsB,OAAOpB,GACtCG,IAAeiB,OAAOnB,GAAgB,GACvCoB,cAAclC,E,GAGfa,E,CArBDsB,CAAexB,EAAYE,EAAWC,G,GACrCN,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=delay]');\nconst stepEl = document.querySelector('[name=step]');\nconst amountEl = document.querySelector('[name=amount]');\nlet timerId = null;\nlet isActive = false;\n\nformEl.addEventListener('submit', submitedForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction submitedForm(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.target;\n  const delayValue = delay.value;\n  const stepValue = step.value;\n  const amaountValue = amount.value;\n  setTimeout(() => {\n    if (isActive) {\n      return;\n    }\n    isActive = true;\n    promiseCreator(delayValue, stepValue, amaountValue);\n  }, delay);\n}\n\nfunction promiseCreator(delayValue, stepValue, amaountValue) {\n  let alertStep = 1;\n\n  timerId = setInterval(() => {\n    createPromise(alertStep, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    alertStep = alertStep + 1;\n    delayValue = Number(delayValue) + Number(stepValue);\n    if(alertStep === (Number(amaountValue) + 1)){\n      clearInterval(timerId);\n    }\n    \n  }, stepValue);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$timerId","$ce04d3a99e08e73b$var$isActive","addEventListener","e","preventDefault","_elements","target","elements","delay","step","amount","delayValue","value","stepValue","amaountValue","setTimeout","alertStep","setInterval","position","Promise","resolve","reject","Math","random","$ce04d3a99e08e73b$var$createPromise","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","Number","clearInterval","$ce04d3a99e08e73b$var$promiseCreator"],"version":3,"file":"03-promises.a78ea815.js.map"}